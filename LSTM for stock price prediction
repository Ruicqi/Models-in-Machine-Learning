#导入需要的包
import numpy as np 
import matplotlib.pyplot as plt 
import pandas as pd
from keras.models import Sequential 
from keras.layers import Dense 
from keras.layers import LSTM 
from keras.layers import Dropout
from sklearn.preprocessing import MinMaxScaler 

#生成训练集
dataset_train = pd.read_csv('Amazon0.csv') 
training_set = dataset_train.iloc[:, 1:2].values
sc = MinMaxScaler(feature_range = (0, 1)) 
training_set_scaled = sc.fit_transform(training_set)
X_train = []
y_train = [] 
for i in range(60, 2035): 
    X_train.append(training_set_scaled[i-60:i, 0]) 
    y_train.append(training_set_scaled[i, 0]) 
X_train, y_train = np.array(X_train), np.array(y_train) 
X_train = np.reshape(X_train, (X_train.shape[0], X_train.shape[1], 1))

#模型构建
model = Sequential() 
model.add(LSTM(units = 50, return_sequences=True )) 
model.add(Dropout(0.1)) 
model.add(LSTM(units = 50)) 
model.add(Dropout(0.1)) 
model.add(Dense(units = 1)) 

#模型训练
model.compile(optimizer = 'rmsprop', loss = 'mean_squared_error') 
model.fit(X_train, y_train, epochs = 100, batch_size = 32)

#生成测试集并进行测试
dataset_test = pd.read_csv('Amazon_test.csv') 
real_stock_price = dataset_test.iloc[:, 1:2].values
dataset_total = pd.concat((dataset_train['Open'], dataset_test['Open']), axis = 0) 
inputs = dataset_total[len(dataset_total) - len(dataset_test) - 60:].values 
inputs = inputs.reshape(-1,1) 
inputs = sc.transform(inputs) 
X_test = [] 
for i in range(60, 76): 
    X_test.append(inputs[i-60:i, 0])
X_test = np.array(X_test) 
X_test = np.reshape(X_test, (X_test.shape[0], X_test.shape[1], 1)) 
predicted_stock_price = model.predict(X_test) 
predicted_stock_price = sc.inverse_transform(predicted_stock_price)

#绘图部分
plt.plot(real_stock_price, color = 'black', label = 'Amazon Stock Price') 
plt.plot(predicted_stock_price, color = 'green', label = 'Predicted Amazon Stock Price') 
plt.title('Amazon Stock Price Prediction') 
plt.xlabel('Time') 
plt.ylabel('Amazon Stock Price') 
plt.legend() 
plt.savefig('Amazon_stock_price_prediction.jpg')
plt.show()
